name: Deploy to Prod Env
on:
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:
    inputs:
      PR_number:
        description: 'Pull request number'
        required: true
jobs:
  deploy_production:
    environment: production
    runs-on: ubuntu-latest
    outputs:
      PR_URL: "https://github.com/parjun8840/gha-terraform/pull/4"
      PR_DETAILS: ${{ steps.verify_pr_number.outputs.result }}
    steps:
      - name: Verify Pull Request Number
        uses: actions/github-script@v6.4.0
        id: verify_pr_number
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const response = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.inputs.PR_number }}
            });
          
             // Check if the pull request is open
            if (response.data.number !== ${{ github.event.inputs.PR_number }} || response.data.state != "open") {
              throw new Error('Pull request is not open or number is not valid!');
            } else {
            console.log("PR ref: " + response.data.head.ref);
            console.log("Status of the PR ref: " + response.data.state);
            console.log("Event Name: " + github.event_name);
            console.log("Base Branch Name: " + response.data.base.ref);
            console.log("PR URL: " + response.data.url);
            return "PR URL: " + response.data.html_url + ", PR Title: " + response.data.title;
            }
        ############ github.event_name isn't  'pull_request'##########
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -input=false
        continue-on-error: true
      - name: List files and directories
        run: |
          ls -lart
          echo "----listing tree----"
          ls -lrtR
      - uses: actions/github-script@v6
        env:
          APPLY: "terraform\n${{ steps.apply.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå \`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Apply üìñ\`${{ steps.apply.outcome }}\`

            <details><summary>Show Apply</summary>

            \`\`\`\n
            ${process.env.APPLY}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: ${{ github.event.inputs.PR_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  slack-notify:
    environment: production
    runs-on: ubuntu-latest
    needs: deploy_production
    steps:
      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
        # Slack channel id, channel name, or user id to post message.
        # See also: https://api.slack.com/methods/chat.postMessage#channels
        # For posting a rich message using Block Kit
          payload: |
            {
              "text": "Deployment of  PR: ${{ github.event.inputs.PR_number  }} started.\n\nDescription of PR:-  \n\t${{ needs.deploy_production.outputs.PR_DETAILS }}\n\tJob Status: ${{ needs.deploy_production.result }}" }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
